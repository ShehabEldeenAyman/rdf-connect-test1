"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var rdf_stores_1 = require("rdf-stores");
var ShapesGraph_1 = require("../lib/ShapesGraph");
var rdf_data_factory_1 = require("rdf-data-factory");
var rdf_dereference_1 = __importDefault(require("rdf-dereference"));
var process = __importStar(require("process"));
var pako_1 = require("pako");
var js_base64_1 = require("js-base64");
var df = new rdf_data_factory_1.DataFactory();
// Check if at least one command line argument is provided
if (process.argv.length <= 2) {
    console.error('Please provide an IRI to a dereferenceable SHACL NodeShape or an LDES or tree:Collection with with tree:shape property in it');
    process.exit(1); // Exit with an error code
}
var iri = process.argv[2];
function main() {
    return __awaiter(this, void 0, void 0, function () {
        var df, shapeStore, shapesGraph, shapeTerm, readStream, tmpShapeTerm, readStream2_1, actualMermaid, formatJSON, serialize, defaultState, json, serialized;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    df = new rdf_data_factory_1.DataFactory();
                    shapeStore = rdf_stores_1.RdfStore.createDefault();
                    shapeTerm = df.namedNode(iri);
                    return [4 /*yield*/, rdf_dereference_1.default.dereference(iri, {
                            localFiles: true,
                        })];
                case 1:
                    readStream = (_a.sent()).data;
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            shapeStore.import(readStream).on("end", resolve).on("error", reject);
                        })];
                case 2:
                    _a.sent();
                    tmpShapeTerm = shapeStore.getQuads(null, df.namedNode('https://w3id.org/tree#shape'), null).map(function (quad) { return quad.object; });
                    if (tmpShapeTerm[0]) {
                        shapeTerm = tmpShapeTerm[0];
                        iri = shapeTerm.value;
                    }
                    if (!(tmpShapeTerm[0] && tmpShapeTerm[0].termType === 'NamedNode')) return [3 /*break*/, 5];
                    //Dereference the shape and add it here. The iri is not this IRI
                    console.error('GET ' + shapeTerm.value);
                    return [4 /*yield*/, rdf_dereference_1.default.dereference(shapeTerm.value, {
                            localFiles: true,
                        })];
                case 3:
                    readStream2_1 = (_a.sent()).data;
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            shapeStore.import(readStream2_1).on("end", resolve).on("error", function () {
                                console.error('Warning: couldnâ€™t fetch ' + iri + ' but continuing');
                                resolve(null);
                            });
                        })];
                case 4:
                    _a.sent();
                    _a.label = 5;
                case 5:
                    shapesGraph = new ShapesGraph_1.ShapesGraph(shapeStore);
                    actualMermaid = shapesGraph.toMermaid(shapeTerm);
                    console.log('```mermaid');
                    console.log(actualMermaid);
                    console.log('```');
                    formatJSON = function (data) { return JSON.stringify(data, undefined, 2); };
                    serialize = function (state) {
                        var data = new TextEncoder().encode(state);
                        var compressed = (0, pako_1.deflate)(data, { level: 9 }); // zlib level 9
                        return (0, js_base64_1.fromUint8Array)(compressed, true); // url safe base64 encoding
                    };
                    defaultState = {
                        code: actualMermaid,
                        mermaid: formatJSON({
                            theme: 'default'
                        }),
                        autoSync: true,
                        updateDiagram: true
                    };
                    json = JSON.stringify(defaultState);
                    serialized = serialize(json);
                    console.log();
                    console.log('Mermaid Live: https://mermaid.live/edit#pako:' + serialized);
                    return [2 /*return*/];
            }
        });
    });
}
main();
//# sourceMappingURL=mermaid.js.map