"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var process = __importStar(require("process"));
var CBDShapeExtractor_1 = require("../lib/CBDShapeExtractor");
var n3_1 = require("n3");
var rdf_data_factory_1 = require("rdf-data-factory");
var rdf_stores_1 = require("rdf-stores");
var rdf_dereference_1 = __importDefault(require("rdf-dereference"));
var df = new rdf_data_factory_1.DataFactory();
// Check if at least one command line argument is provided
if (process.argv.length <= 2) {
    console.error('Please provide an entity to describe in the first command line parameter, and optionally a shape IRI to fulfill, and a IRI');
    process.exit(1); // Exit with an error code
}
function loadShape(shapeURL, shapeStore) {
    return __awaiter(this, void 0, void 0, function () {
        var readStream, requested, importsURLs, _loop_1, importsURLs_1, importsURLs_1_1, imp, e_1_1;
        var e_1, _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4 /*yield*/, rdf_dereference_1.default.dereference(shapeURL)];
                case 1:
                    readStream = (_b.sent()).data;
                    requested = [shapeURL];
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            shapeStore.import(readStream).on("end", resolve)
                                .on("error", reject);
                        })];
                case 2:
                    _b.sent();
                    importsURLs = shapeStore.getQuads(null, df.namedNode('http://www.w3.org/2002/07/owl#imports'), null, null).map(function (quad) {
                        return quad.object.value;
                    });
                    _loop_1 = function (imp) {
                        var newReadStream_1;
                        return __generator(this, function (_c) {
                            switch (_c.label) {
                                case 0:
                                    if (!!requested.includes(imp)) return [3 /*break*/, 3];
                                    requested.push(imp);
                                    return [4 /*yield*/, rdf_dereference_1.default.dereference(imp)];
                                case 1:
                                    newReadStream_1 = (_c.sent()).data;
                                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                                            shapeStore.import(newReadStream_1).on("end", resolve)
                                                .on("error", reject);
                                        })];
                                case 2:
                                    _c.sent();
                                    //check for new imports URLs
                                    importsURLs = shapeStore.getQuads(null, df.namedNode('http://www.w3.org/2002/07/owl#imports'), null, null).map(function (quad) {
                                        return quad.object.value;
                                    });
                                    _c.label = 3;
                                case 3: return [2 /*return*/];
                            }
                        });
                    };
                    _b.label = 3;
                case 3:
                    _b.trys.push([3, 8, 9, 10]);
                    importsURLs_1 = __values(importsURLs), importsURLs_1_1 = importsURLs_1.next();
                    _b.label = 4;
                case 4:
                    if (!!importsURLs_1_1.done) return [3 /*break*/, 7];
                    imp = importsURLs_1_1.value;
                    return [5 /*yield**/, _loop_1(imp)];
                case 5:
                    _b.sent();
                    _b.label = 6;
                case 6:
                    importsURLs_1_1 = importsURLs_1.next();
                    return [3 /*break*/, 4];
                case 7: return [3 /*break*/, 10];
                case 8:
                    e_1_1 = _b.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 10];
                case 9:
                    try {
                        if (importsURLs_1_1 && !importsURLs_1_1.done && (_a = importsURLs_1.return)) _a.call(importsURLs_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 10: return [2 /*return*/];
            }
        });
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function () {
        var entity, shapeStore, shapeId, extractor, writer, quads;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    entity = process.argv[2];
                    shapeStore = rdf_stores_1.RdfStore.createDefault();
                    shapeId = "";
                    if (!process.argv[3]) return [3 /*break*/, 2];
                    //A shape type has been set!
                    if (process.argv[3] === 'shape') {
                        //Use our own shape extractor shape
                        shapeId = "https://raw.githubusercontent.com/pietercolpaert/extract-cbd-shape/main/extract-cbd-shape-ap.ttl#ShapeShape";
                    }
                    else {
                        shapeId = process.argv[3];
                    }
                    return [4 /*yield*/, loadShape(shapeId, shapeStore)];
                case 1:
                    _a.sent();
                    _a.label = 2;
                case 2:
                    extractor = new CBDShapeExtractor_1.CBDShapeExtractor(shapeStore);
                    console.error('Processing shape ' + shapeId + ' from this shape: ', extractor.shapesGraph);
                    writer = new n3_1.Writer();
                    return [4 /*yield*/, extractor.extract(rdf_stores_1.RdfStore.createDefault(), df.namedNode(entity), df.namedNode(shapeId))];
                case 3:
                    quads = _a.sent();
                    writer.addQuads(quads);
                    writer.end(function (err, res) { console.log(res); });
                    return [2 /*return*/];
            }
        });
    });
}
main();
//# sourceMappingURL=extract.js.map